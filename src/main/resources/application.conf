workercluster {

  system-name = "ClusterSystem"

  akka {
    scheduler.tick-duration = 33ms

    extensions = ["akka.contrib.pattern.DistributedPubSubExtension"]

    contrib.cluster.pub-sub {
      # Actor name of the mediator actor
      name = distributedPubSubMediator

      # Start the mediator on members tagged with this role.
      # All members are used if undefined or empty.
      role = "pubSubAck"

      # How often the DistributedPubSubMediator should send out gossip information
      gossip-interval = 1s

      # Removed entries are pruned after this duration
      removed-time-to-live = 120s
    }

    event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
    }

    remote {
      transport = "akka.remote.netty.NettyRemoteTransport"
    }

    cluster {
      seed-nodes = [
        "akka.tcp://ClusterSystem@127.0.0.1:2551",
        "akka.tcp://ClusterSystem@127.0.0.1:2552"]

      roles = []
      metrics.collector-class = akka.cluster.JmxMetricsCollector
      min-nr-of-members = 2

      auto-down = on
    }

    remote {
      log-remote-lifecycle-events = off
      netty.tcp {
        hostname = "127.0.0.1"
        port = 0
      }
    }
  }
}
